---
name: Run All Pre-commit Hooks

"on":
    workflow_call:
        inputs:
            python-version:
                description: "Python version to use"
                required: false
                type: string
                default: "3.12"
            artifacts-dir:
                description: "Directory for storing all artifacts"
                required: false
                type: string
                default: "artifacts"

env:
    PYTHON_VERSION: ${{ inputs.python-version }}
    ARTIFACTS_DIR: ${{ inputs.artifacts-dir }}

jobs:
    pre-commit-all:
        name: Run All Pre-commit Hooks
        runs-on: ubuntu-22.04
        steps:
            - name: Download unified artifacts
              uses: actions/download-artifact@v4
              with:
                  name: solanaexporter-artifacts-${{ github.run_id }}
                  path: ${{ env.ARTIFACTS_DIR }}

            - name: Copy .github directory to workspace root
              run: |
                  set -e
                  echo "=== Copying .github directory from artifacts ==="
                  ARTIFACTS_PATH="${{ env.ARTIFACTS_DIR }}"
                  echo "Artifacts directory: $ARTIFACTS_PATH"
                  echo "Current working directory: $(pwd)"
                  echo "Workspace: $GITHUB_WORKSPACE"

                  # Check for non-hidden github-actions directory first
                  if [ -d "$ARTIFACTS_PATH/github-actions" ]; then
                      echo "✓ Found github-actions directory"
                      echo "Copying github-actions to .github in workspace root..."
                      cp -r "$ARTIFACTS_PATH/github-actions" "$GITHUB_WORKSPACE/.github"
                      echo "✓ .github directory copied successfully"
                  elif [ -d "$ARTIFACTS_PATH/source/.github" ]; then
                      echo "✓ Found .github directory in source"
                      echo "Copying .github directory to workspace root..."
                      cp -r "$ARTIFACTS_PATH/source/.github" "$GITHUB_WORKSPACE/"
                      echo "✓ .github directory copied successfully"
                  else
                      echo "✗ Neither github-actions nor source/.github found"
                      echo "Available directories in artifacts:"
                      ls -la "$ARTIFACTS_PATH" || echo "Artifacts directory not found"
                      echo "Creating minimal .github structure for action to work"
                      mkdir -p "$GITHUB_WORKSPACE/.github/actions/restore-environment"
                      echo "Minimal .github structure created as fallback"
                  fi

            - name: Restore Environment
              uses: ./.github/actions/restore-environment
              with:
                  python-version: ${{ env.PYTHON_VERSION }}
                  artifacts-dir: ${{ env.ARTIFACTS_DIR }}

            - name: Run all pre-commit hooks (reproducing local commit flow)
              run: |
                  source "${{ env.ARTIFACTS_DIR }}/python-env.sh"
                  cd "$PROJECT_DIR"

                  # This reproduces the exact local commit flow
                  echo "Running all pre-commit hooks as in local development..."
                  poetry run pre-commit run --all-files || true

            - name: Check for changes made by pre-commit
              id: check_changes
              run: |
                  source "${{ env.ARTIFACTS_DIR }}/python-env.sh"
                  cd "$PROJECT_DIR"

                  if [[ -n $(git status --porcelain) ]]; then
                      echo "changes=true" >> $GITHUB_OUTPUT
                      echo "Pre-commit hooks made changes to the following files:"
                      git status --short
                  else
                      echo "changes=false" >> $GITHUB_OUTPUT
                      echo "No changes made by pre-commit hooks"
                  fi

            - name: Commit and push changes
              if: steps.check_changes.outputs.changes == 'true'
              run: |
                  source "${{ env.ARTIFACTS_DIR }}/python-env.sh"
                  cd "$PROJECT_DIR"

                  git config --local user.email "github-actions[bot]@users.noreply.github.com"
                  git config --local user.name "github-actions[bot]"
                  git add -A
                  git commit -m "style: auto-fix pre-commit hooks [skip ci]"
                  git push

            - name: Fail if changes were needed
              if: steps.check_changes.outputs.changes == 'true'
              run: |
                  echo "::warning::Pre-commit hooks made changes. Changes have been committed automatically."
                  echo "Please pull the latest changes before your next commit."
                  exit 1
